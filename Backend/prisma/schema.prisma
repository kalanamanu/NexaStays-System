// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int                     @id @default(autoincrement())
  email          String                  @unique
  password       String
  role           String                  // "customer" or "travel-company"
  customerProfile CustomerProfile?       // one-to-one optional
  travelCompanyProfile TravelCompanyProfile? // one-to-one optional
  createdAt      DateTime                @default(now())
}

model CustomerProfile {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  phone     String
  country   String
  nic       String
  birthDay  DateTime
  address   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  reservations  Reservation[]
}

model TravelCompanyProfile {
  id             Int      @id @default(autoincrement())
  companyName    String
  companyRegNo   String
  phone          String
  country        String
  address        String
  user           User     @relation(fields: [userId], references: [id])
  userId         Int      @unique
}

model Reservation {
  id            Int       @id @default(autoincrement())
  customer      CustomerProfile @relation(fields: [customerId], references: [id])
  customerId    Int
  roomType      String
  arrivalDate   DateTime
  departureDate DateTime
  guests        Int
  totalAmount   Float
  status        String   // e.g. "pending", "paid", "cancelled"
  paymentIntentId String? // Stripe Payment Intent ID
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}